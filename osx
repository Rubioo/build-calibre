#!/usr/bin/env python2
# vim:fileencoding=utf-8
# License: GPLv3 Copyright: 2016, Kovid Goyal <kovid at kovidgoyal.net>

from __future__ import (unicode_literals, division, absolute_import,
                        print_function)
import sys
import os
import errno
from functools import partial

from vms import ensure_vm, shutdown_vm, run_in_vm as riv, Rsync
VM = 'osx-calibre-build'
run_in_vm = partial(riv, VM)
rsync = Rsync(VM)
base = os.path.dirname(os.path.abspath(__file__))

if sys.argv[1:] == ['shutdown']:
    shutdown_vm(VM)
    raise SystemExit(0)


def abspath(x):
    return os.path.abspath(os.path.join(base, x))


def mkdir(x):
    try:
        os.mkdir(abspath(x))
    except EnvironmentError as err:
        if err.errno == errno.EEXIST:
            return
        raise

mkdir('sources-cache')
mkdir('build')
output_dir = os.path.join(abspath('build'), 'osx')
mkdir(output_dir)

ensure_vm(VM)
print('Mirroring data to the VM...')
calibre_dir = os.environ.get('CALIBRE_SRC_DIR', os.path.join('..', 'calibre'))
if os.path.exists(os.path.join(calibre_dir, 'setup.py')):
    rsync.to_vm(calibre_dir, '/calibre', '/imgsrc /build /dist /manual /format_docs /icons /translations /.build-cache /tags /Changelog* *.so *.pyd')

for x in 'scripts patches'.split():
    rsync.to_vm(x, '/' + x)

rsync.to_vm('sources-cache', '/sources')
rsync.to_vm('build/osx', '/sw')

try:
    pass
finally:
    print('Mirroring data from VM...')
    rsync.from_vm('/sw', 'build/osx')
    rsync.from_vm('/sources', 'sources-cache')
